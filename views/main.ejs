<!DOCTYPE html>
<html>

<head>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
    <link href="main.css" rel="stylesheet" type="text/css">
</head>

<body>
    <div id='big_big_label'>목표 달성 기록</div>
    <div id='contain'>
        <div class='contain_ele big_label'>날짜</div>
        <input class='contain_ele' type="date" id="calendar" onchange="change_date()" onkeydown="return false" min="2021-01-01" max="2100-12-31">
        <div id='friend_label' class='contain_ele big_label'>친구</div>
        <select id='friend_select' class='contain_ele' onchange="change_friend(this)" style="height: 3.4rem;">
            <option>선택</option>
        </select>
        <button id='mode' onclick="change_mode(0)" style="margin-left: 2%;">수정</button>
        <button id='cancel' onclick="change_mode(1)" style="display: none;">취소</button>
    </div>
    <table border='1px' width='95%' cellspacing="0" cellpadding="0" style="margin-left: 2%;">
        <tr align="center" class="title">
            <td class='title_ele' width="6%">유저</td>
            <td class='title_ele' width="12%">목표</td>
            <td class='title_ele' width="4%">달성</td>
            <td class='title_ele' id="state_title" width="10%">실천 현황</td>
            <td id="control_title" class='control_td titel_ele' width="15%">입력</td>
        </tr>
    </table>
</body>

<script>
    const control_btn_color = 'rgb(240, 243, 247)';

    let mode = 1;
    let cur_date;
    let selected_friend_name = "";
    let friend_list = [];
    let me_data = [
        ['-', '-'] // DB에 데이터가 0개인 경우는 일부러 ['-', '-']로 채워넣어야 함
    ];
    let me_data_comment = "";
    let temp_data = [];
    let friend_data = [
        ['-', '-'] // DB에 데이터가 0개인 경우는 일부러 ['-', '-']로 채워넣어야 함
    ];
    let friend_data_comment = "";

    load_friend_list();

    function load_friend_list() {
        $.ajax({
            url: `/friend?id=<%=id%>`,
            type: 'GET',
            success: function(data) {
                data.result.forEach(function(friend) {
                    friend_list.push(friend);
                    $('#friend_select').append(`<option>${friend.friend_name}</option>`);
                });

                // 캘린더 초기화
                $('#calendar').val(date_to_string(new Date()));
                cur_date = $('#calendar').val();
                $('#calendar').trigger('change');
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function change_date() {
        cur_date = $('#calendar').val();
        retrieve_content_db();
    }

    function change_mode(cancel) {
        if (mode == 2 && cancel == 0) { // 저장 버튼을 눌렀다면
            if (input_is_empty()) return;
        }
        if (mode == 1) { // 현재 조회 모드라면
            let data_num = me_data.length;
            if (data_num == 0) {
                temp_data = [
                    ['-', '-']
                ];
            } else {
                temp_data = [];
                for (var i = 0; i < data_num; i++) {
                    temp_data.push(me_data[i].slice()); // slice : 깊은 복사
                }
            }
            modify_mode();
        } else if (mode == 2) { // 현재 수정 모드라면
            if (cancel == 0) { // 저장 버튼을 눌렀다면
                let data_num = temp_data.length;
                if (data_num == 0) {
                    me_data = [
                        ['-', '-']
                    ];
                } else {
                    me_data = [];
                    for (var i = 0; i < data_num; i++) {
                        me_data.push(temp_data[i].slice()); // slice : 깊은 복사
                    }
                }
                save_content_db();
            }
            retrieve_mode();
        }
    }

    function retrieve_content_db() {
        $.ajax({
            url: `/content?id=<%=id%>&date=${cur_date}`,
            type: 'GET',
            success: function(result) {
                if (result.result == undefined || result.result.length == 0) { // 값이 없다면
                    me_data = [
                        ['-', '-']
                    ];
                    temp_data = [
                        ['-', '-']
                    ];
                } else { // 값이 있다면
                    me_data = [];
                    temp_data = [];
                    $(result.result).each(function(index, item) {
                        let row_data = [item.goal, item.type, item.data1, item.data2.replace(/<br>/gi, '\n'), item.data3];
                        me_data.push(row_data);
                        temp_data.push(row_data);
                    });
                }

                /* DB 데이터 샘플 */
                // data = [
                //     ['8시 기상', 'X/O', 'X', '', ''],
                //     ['푸쉬업', '개', '30', '45', ''],
                //     ['복근 운동', '회', '20', '60', ''],
                //     ['스쿼트', '세트', '2', '5', ''],
                //     ['(단위 미선택)', '-', '', '', ''],
                //     ['토익 리딩 141~200번', '단위입력', '번', '15', '60'],
                //     ['달리기', '단위입력', 'km', '0.8', '1.5'],
                //     ['회의', '설명글', '100', '민덕기 교수님께서 교재 개발 내용을 보다 상세히 안내해주셨음', ''],
                //     ['긍정적인 생각', '%', '80', '', ''],
                // ];

                retrieve_comment_db();
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function retrieve_comment_db() {
        $.ajax({
            url: `/comment?id=<%=id%>&date=${cur_date}`,
            type: 'GET',
            success: function(result) {
                me_data_comment = "";
                if (result.result != undefined && result.result.length != 0) { // 값이 있다면
                    me_data_comment = result.result[0].comment.replace(/<br>/gi, '\n');
                }

                /* DB 데이터 샘플 */
                // data_comment = "오늘은 그 어느 날보다도 알찬 하루였다!"

                retrieve_friend_content_db();
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function change_friend(self) {
        selected_friend_name = $(self).children("option:selected").val();
        retrieve_friend_content_db();
    }

    function get_friend_id(friend_name) {
        let friend_id = "";
        $(friend_list).each(function(index, item) {
            if (item.friend_name == friend_name) {
                friend_id = item.friend_id;
            }
        });
        return friend_id;
    }

    function retrieve_friend_content_db() {
        let friend_name = get_friend_id(selected_friend_name);
        $.ajax({
            url: `/content?id=${friend_name}&date=${cur_date}`,
            type: 'GET',
            success: function(result) {
                if (result.result == undefined || result.result.length == 0) { // 값이 없다면
                    friend_data = [
                        ['-', '-']
                    ];
                } else { // 값이 있다면
                    friend_data = [];
                    $(result.result).each(function(index, item) {
                        let row_data = [item.goal, item.type, item.data1, item.data2.replace(/<br>/gi, '\n'), item.data3];
                        friend_data.push(row_data);
                    });
                }

                retrieve_friend_comment_db();
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function retrieve_friend_comment_db() {
        let friend_name = get_friend_id(selected_friend_name);
        $.ajax({
            url: `/comment?id=${friend_name}&date=${cur_date}`,
            type: 'GET',
            success: function(result) {
                friend_data_comment = "";
                if (result.result != undefined && result.result.length != 0) { // 값이 있다면
                    friend_data_comment = result.result[0].comment.replace(/<br>/gi, '\n');
                }

                if (mode == 1) retrieve_mode();
                else if (mode == 2) modify_mode();
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function retrieve_mode() {
        mode = 1; // 조회 모드로 전환
        $("#friend_select").css("display", 'block');
        $("#friend_label").css("display", 'block');

        $('tr:not(.title)').remove();

        $('#cancel').css('display', 'none');

        $('#mode').text("수정");

        $("#control_title").css('display', 'table-cell');
        $("#state_title").css('width', '10%');

        for (let i = 0; i < me_data.length; i++) {
            $('table').append(make_retrieve_row("me", i));
        }
        $('table').append(make_retrieve_row("me", "avg"));

        // 친구를 선택했을 때만
        if ($($('#friend_select').children("option:selected")).text() != '선택') {
            for (let i = 0; i < friend_data.length; i++) {
                $('table').append(make_retrieve_row("friend", i));
            }
            $('table').append(make_retrieve_row("friend", "avg"));
        }

        $('.control_btn').click(control_click);
        $('.control_btn').click(change_percentage_color);
        change_percentage_color();
    }

    function modify_mode() {
        mode = 2; // 수정 모드로 전환
        $("#friend_select").css("display", 'none');
        $("#friend_label").css("display", 'none');

        $('tr:not(.title)').remove();

        $('#cancel').css('display', 'inline-block');
        $('#cancel').css('margin-left', '2%');

        $('#mode').text("저장");

        $("#control_title").css('display', 'none');
        $("#state_title").css('width', '20%');

        for (let i = 0; i < me_data.length; i++) {
            let ret = make_modify_row(i);
            $('table').append(ret.table_row);
            $($('#row' + i).find('.type_sel')).val(ret.type);
        }
        $('table').append(make_modify_row('plus'));
    }

    function input_is_empty() {
        var child = $('.state_wrapper').children();
        for (var i = 0; i < child.length; i++) { // children의 개수 = input box의 개수
            let val = $(child[i]).val();
            if (val == "") {
                alert("'실천 현황'에 빈 칸이 있어서 저장할 수가 없습니다");
                return true;
            }
        };
        return false;
    }

    function input_size_check(self, size = 300) {
        if ($(self).val().length > size) {
            alert('허용된 글자 길이를 초과하였습니다.')
            $(self).val($(self).val().substr(0, size));
        }
    }

    function replace_char(str) {
        if (str == undefined) return "";
        str = str.toString();
        str = str.replace(/%/gi, '%25');
        str = str.replace(/\n/gi, '<br>');
        str = str.replace(/\+/gi, '%2B');
        str = str.replace(/'/gi, '\'\'');
        return str;
    }

    function save_content_db() {
        let temp;
        $.ajax({
            url: `/content?id=<%=id%>&date=${cur_date}`,
            type: 'DELETE',
            success: function(result) {
                for (let index = 0; index < temp_data.length; index++) {
                    let goal = "",
                        type = "",
                        data1 = "",
                        data2 = "",
                        data3 = "";
                    let length = temp_data[index].length;
                    if (length >= 1) goal = replace_char(temp_data[index][0]);
                    if (length >= 2) type = replace_char(temp_data[index][1]);
                    if (length >= 3) data1 = replace_char(temp_data[index][2]);
                    if (length >= 4) data2 = replace_char(temp_data[index][3]);
                    if (length >= 5) data3 = replace_char(temp_data[index][4]);
                    temp = data2;
                    $.ajax({
                        url: `/content?id=<%=id%>&date=${cur_date}&index=${index}&goal=${goal}&type=${type}&data1=${data1}&data2=${data2}&data3=${data3}`,
                        type: 'POST',
                        success: function(result) {},
                        error: function(e) {}
                    });
                }
            },
            error: function(e) {
                console.log(e);
            }
        });
    }

    function remove(self) {
        let length = $('.row').length;
        if (length == 1) {
            alert("더 이상 삭제할 수 없습니다.");
            return;
        }

        let index = Number.parseInt($(self).attr('index'));

        let goal = $('#row' + index).find('input').val();
        if (goal != '' && !confirm(`'${goal}' 항목을 정말로 삭제하시겠습니까?`)) return;

        temp_data.splice(index, 1)

        // row index 감소
        for (let i = index + 1; i < length; i++) {;
            let tr = $('#row' + i);
            $(tr).attr('id', 'row' + (i - 1));
            let td = $(tr).children()[0];
            let img1 = $(td).children()[0];
            let img2 = $(td).children()[1];
            $(img1).attr('index', i - 1);
            $(img2).attr('index', i - 1);
        }

        // plus index 감소
        let tr = $('#plus');
        let td = $(tr).children()[0];
        let div = $(td).children()[0];
        let img = $(div).children()[0];
        $(img).attr('index', length - 1);

        // html 제거
        $('#row' + index).remove();

        if (index == 0) { // 첫 줄에서 제거한 경우
            let name = `<td id="name" rowspan="${length + 1}"><%=name%></td>`;
            if (length == 1) { // 한 줄만 남은 경우
                // plus에 name 추가
                let td = $('#plus').children()[0];
                $(td).before(name);
            } else {
                // row0에 name 추가
                let td = $('#row0').children()[0];
                $(td).before(name);
            }
        }

        // colspan 감소
        let td_ = $('#name');
        let span = Number.parseInt($(td_).attr('rowspan')) - 1;
        $(td_).attr('rowspan', span);
    }

    function add(self) {
        let index = Number.parseInt($(self).attr('index'));
        let length = $('.row').length;
        let table_row = "";

        temp_data.splice(index, 0, ['-', '-', '', '', '']);

        let state = make_state('-');

        if (index == 0) { // 첫 줄에서 추가한 경우
            // 삽입할 html 내용
            table_row = `
            <tr id='row${index}' class="row">
                <td id="name" rowspan="${length + 1}"><%=name%></td>
                <td class='goal_td'>
                    <img index=${index} class="add_goal" onclick="add(this)" src='plus.png' />
                    <img index=${index} class="remove_goal" onclick="remove(this)" src='minus.png' />
                    <input class='goal' onchange="modify_goal(this); input_size_check(this, 50);" placeholder="내용 입력" />
                </td>
                <td>
                    <div class='percentage'>-</div>
                </td>
                <td>
                    <div class='state'>${state}</div>
                </td>
            </tr>
        `;
            // row0의 name 제거
            $('#name').remove();
        } else { // 첫 줄이 아닌 줄에서 추가한 경우
            // 삽입할 html 내용
            table_row = `
            <tr id='row${index}' class="row">
                <td class='goal_td'>
                    <img index=${index} class="add_goal" onclick="add(this)" src='plus.png' />
                    <img index=${index} class="remove_goal" onclick="remove(this)" src='minus.png' />
                    <input class='goal' onchange="modify_goal(this); input_size_check(this, 50);" placeholder="내용 입력" />
                </td>
                <td>
                    <div class='percentage'>-</div>
                </td>
                <td>
                    <div class='state'>${state}</div>
                </td>
            </tr>
        `;
        }

        // plus index 증가
        let tr = $('#plus');
        let td = $(tr).children()[0];
        let div = $(td).children()[0];
        let img = $(div).children()[0];
        $(img).attr('index', length + 1);

        if (index == length) { // 마지막 줄에서 추가한 경우
            // html 삽입
            $($('#plus')).before(table_row);
        } else { // 마지막 줄을 제외한 줄에서 추가한 경우
            // row index 증가
            for (let i = index; i < length; i++) {
                let tr = $('.row')[i];
                $(tr).attr('id', 'row' + (i + 1));
                let td = $(tr).children()[0];
                let img1 = $(td).children()[0];
                let img2 = $(td).children()[1];
                $(img1).attr('index', i + 1);
                $(img2).attr('index', i + 1);
            }

            // html 삽입
            if (index == 0) { // 첫 줄에 추가한 경우
                $($('#row1')).before(table_row);
            } else { // 첫 줄과 마지막 줄을 제외한 줄에서 추가한 경우
                $($('.row')[index]).before(table_row);
            }
        }

        // colspan 증가
        let td_ = $('#name');
        let span = Number.parseInt($(td_).attr('rowspan')) + 1;
        $(td_).attr('rowspan', span);
    }

    function change_percentage_color() {
        $('.percentage').each(function(index, item) {
            let val = $(item).html();
            if (val == '-') return;

            let p = $(item).parent();
            val = Number.parseInt(val.substr(0, val.length - 1));
            if (val < 30) {
                p.css("background", "#ffdddd");
            } else if (val < 70) {
                p.css("background", "#FEFEC3");
            } else {
                p.css("background", "#DCF8D7");
            }
        });
    }

    function modify_goal(self) {
        let p = $(self).parent();
        let img = $(p).children()[0];
        let index = $(img).attr('index');
        temp_data[index][0] = $(self).val();
    }

    function modify_state(self) {
        let type = $(self).val();
        let p = $(self).parent();
        let pp = $(p).parent();
        let ppp = $(pp).parent();
        let pppp = $(ppp).parent();
        let img = $(pppp).find('img');
        let index = $(img).attr('index');

        // state 초기화
        let state = make_initial_state(type);
        $(pp).find('.state_wrapper').html(state);

        let goal = temp_data[index][0];
        if (type == "-") { // goal 비우기
            temp_data[index] = ['', '-'];
            let input = $(pppp).find('.goal');
            $(input).val("");
        } else if (type == "X/O") {
            temp_data[index] = [goal, 'X/O', 'X'];
        } else if (type == "개") {
            temp_data[index] = [goal, '개', '0', ''];
        } else if (type == "회") {
            temp_data[index] = [goal, '회', '0', ''];
        } else if (type == "세트") {
            temp_data[index] = [goal, '세트', '0', ''];
        } else if (type == "%") {
            temp_data[index] = [goal, '%', '0'];
        } else if (type == "단위입력") {
            temp_data[index] = [goal, '단위입력', '', '0', ''];
        } else if (type == "설명글") {
            temp_data[index] = [goal, '설명글', '0', ''];
        }
    }

    function modify_input(self, kind) {
        if ($(self).hasClass('only_number') && isNaN($(self).val())) {
            alert('숫자만 입력 가능합니다.');
            $(self).val('');
            return;
        }

        let p = $(self).parent();
        let pp = $(p).parent();
        let ppp = $(pp).parent();
        let pppp = $(ppp).parent();
        let img = $(pppp).find('img');
        let index = $(img).attr('index');
        let select = $(pp).find('.type_sel');
        let type = $(select).val();

        let goal = temp_data[index][0];
        if (type == "개") {
            let val = temp_data[index][2];
            temp_data[index] = [goal, '개', val, $(self).val(), ''];
        } else if (type == "회") {
            let val = temp_data[index][2];
            temp_data[index] = [goal, '회', val, $(self).val(), ''];
        } else if (type == "세트") {
            let val = temp_data[index][2];
            temp_data[index] = [goal, '세트', val, $(self).val(), ''];
        } else if (type == "단위입력") {
            if (kind == 0) { // 최대값 바꾸기
                let unit = temp_data[index][2];
                let val = temp_data[index][3];
                temp_data[index] = [goal, '단위입력', unit, val, $(self).val()];
            } else if (kind == 1) { // 단위 바꾸기
                let val = temp_data[index][3];
                let maxim = temp_data[index][4];
                temp_data[index] = [goal, '단위입력', $(self).val(), val, maxim];
            }
        }
    }

    function make_initial_state(type) {
        let state = "";
        if (type == "-") {
            state += "-";
        } else if (type == "X/O") {
            state += `X`;
        } else if (type == "개") {
            state += `0개 / <input class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 개`;
        } else if (type == "회") {
            state += `0회 / <input class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 회`;
        } else if (type == "세트") {
            state += `0세트 / <input class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 세트`;
        } else if (type == "%") {
            state += `0% / 100%`;
        } else if (type == "단위입력") {
            state += `0 / <input class="only_number" onchange = "modify_input(this, 0); input_size_check(this, 9);" placeholder="값"/>\
                          <input onchange = "modify_input(this, 1); input_size_check(this, 9);" placeholder="단위" /> `;
        } else if (type == "설명글") {
            state += `0% / 100%`;
        }
        return state;
    }

    function make_state(type, val) {
        let wrapper = "";
        wrapper += `
            <div class="type_sel_wrapper">\
                <select class='type_sel' onchange="modify_state(this)">\
                    <option value='-'>-</option>\
                    <option value='X/O'>X/O</option>\
                    <option value='개'>개</option>\
                    <option value='회'>회</option>\
                    <option value='세트'>세트</option>\
                    <option value='%'>%</option>\
                    <option value='단위입력'>단위입력</option>\
                    <option value='설명글'>설명글</option>\
                </select>\
            </div>
            `

        let state_content = "";
        if (type == "-") {
            state_content += "-";
        } else if (type == "X/O") {
            state_content += `${val[2]}`;
        } else if (type == "개") {
            state_content += `${val[2]}개 / <input value=${val[3]} class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 개`;
        } else if (type == "회") {
            state_content += `${val[2]}회 / <input value=${val[3]} class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 회`;
        } else if (type == "세트") {
            state_content += `${val[2]}세트 / <input value=${val[3]} class="only_number" onchange="modify_input(this); input_size_check(this, 9);" /> 세트`;
        } else if (type == "%") {
            state_content += `${val[2]}% / 100%`;
        } else if (type == "단위입력") {
            state_content += `${val[3]} / <input value=${val[4]} class="only_number" onchange="modify_input(this, 0); input_size_check(this, 9);" placeholder="값"/>\
                                          <input value=${val[2]} onchange="modify_input(this, 1); input_size_check(this, 9);" placeholder="단위" /> `;
        } else if (type == "설명글") {
            state_content += `${val[2]}% / 100%`;
        }
        wrapper += `<div class="state_wrapper">${state_content}</div>`;

        return wrapper;
    }

    function make_modify_row(index) {
        let table_row;

        if (index == 'plus') {
            table_row = `
            <tr id='plus'>
                <td style='border-right: 0px; padding-left: 8px;'>
                    <div style='width:100%; height: 3rem; line-height: 3rem;'>
                        <img index=${me_data.length} class="add_goal" onclick="add(this)" src='plus.png' />
                    </div>
                </td>
                <td colspan='2' style='border-left: 0px;'></td>
            </tr>
            `;
            return table_row;
        }

        let goal, percentage, state = "";
        let type = me_data[index][1];
        goal = me_data[index][0];
        state += make_state(type, me_data[index]);

        if (index == 0) {
            table_row = `
            <tr id='row${index}' class="row">
                <td id='name' rowspan='${me_data.length + 1}'><%=name%></td>
                <td class='goal_td'>
                    <img index=${index} class="add_goal" onclick="add(this)" src='plus.png' />
                    <img index=${index} class="remove_goal" onclick="remove(this)" src='minus.png' />
                    <input class='goal' value="${goal}" onchange="modify_goal(this); input_size_check(this, 50);" placeholder="내용 입력" />
                </td>
                <td>
                    <div class='percentage'>-</div>
                </td>
                <td>
                    <div class='state'>${state}</div>
                </td>
            </tr>
            `;
        } else {
            table_row = `
            <tr id='row${index}' class="row">
                <td class='goal_td'>
                    <img index=${index} class="add_goal" onclick="add(this)" src='plus.png' />
                    <img index=${index} class="remove_goal" onclick="remove(this)" src='minus.png' />
                    <input class='goal' value="${goal}" onchange="modify_goal(this); input_size_check(this, 50);" placeholder="내용 입력" />
                </td>
                <td>
                    <div class='percentage'>-</div>
                </td>
                <td>
                    <div class='state'>${state}</div>
                </td>
            </tr>
        `;
        }
        return {
            table_row: table_row,
            type: type
        };
    }

    function save_comment_db() {
        $.ajax({
            url: `/comment?id=<%=id%>&date=${cur_date}&comment=${replace_char(me_data_comment)}`,
            type: 'PUT',
            success: function(result) {},
            error: function(e) {}
        });
    }

    function check_num(self) {
        if (isNaN($(self).val())) {
            alert('숫자만 입력 가능합니다.');
            $(self).val('');
        }
    }

    function control_click() {
        let div = $(this).parent();
        let td = $(div).parent();
        let tr = $(td).parent();
        let index = $(tr).attr("index");
        let btn = $(this).text();

        if (index == 'avg') {
            if (btn == "커멘트 수정") {
                $(this).css("background", "#aef1a1");
                $(this).text("커멘트 저장");
                let val = $($(tr).find('.state')).text();
                let textarea = `<textarea class='description' onchange="input_size_check(this, 300);" placeholder="내용 입력" />`;
                $($(tr).find('.state')).html(textarea);
                $($(tr).find('textarea')).val(val);
                $($(tr).find('textarea')).focus();
            } else if (btn == "커멘트 저장") {
                $(this).css("background", control_btn_color);
                $(this).text("커멘트 수정");
                let val = $($(tr).find('textarea')).val();
                $($(tr).find('textarea')).remove();
                me_data_comment = val;
                $($(tr).find('.state')).text(me_data_comment);
                save_comment_db();
            }
            return;
        }

        let type = me_data[index][1];
        let percentage;
        let state;
        if (type == "X/O") {
            if (btn == "미완료") {
                me_data[index][2] = "X";
                percentage = 0;
            } else if (btn == "완료") {
                me_data[index][2] = "O";
                percentage = 100;
            }
            state = me_data[index][2];
        } else if (type == "개" || type == "회" || type == "세트") {
            let val;
            if (btn == "-5") {
                val = Number.parseInt(me_data[index][2]) - 5;
            } else if (btn == "-1") {
                val = Number.parseInt(me_data[index][2]) - 1;
            } else if (btn == "+1") {
                val = Number.parseInt(me_data[index][2]) + 1;
            } else if (btn == "+5") {
                val = Number.parseInt(me_data[index][2]) + 5;
            }
            if (val <= 0) val = 0;
            me_data[index][2] = val;
            percentage = (me_data[index][2] / me_data[index][3] * 100).toFixed(1);
            state = `${me_data[index][2]+type} / ${me_data[index][3]+type}`;
        } else if (type == "%") {
            let val;
            if (btn == "-30") {
                val = Number.parseInt(me_data[index][2]) - 30;
            } else if (btn == "-10") {
                val = Number.parseInt(me_data[index][2]) - 10;
            } else if (btn == "+10") {
                val = Number.parseInt(me_data[index][2]) + 10;
            } else if (btn == "+30") {
                val = Number.parseInt(me_data[index][2]) + 30;
            }
            if (val <= 0) val = 0;
            if (val >= 100) val = 100;
            me_data[index][2] = val;
            percentage = val;
            state = val + type;
        } else if (type == "단위입력") {
            if (btn == "수정") {
                $(this).css("background", "#aef1a1");
                $(this).text("저장");
                let input = `<input onchange="check_num(this);"/>`;
                state = `${me_data[index][2]} / ${me_data[index][4]}${me_data[index][2]}`;
                $($(tr).find('.state')).html(input + state);
                $($(tr).find('input')).val(me_data[index][3]);
                $($(tr).find('input')).focus();
                return;
            } else if (btn == "저장") {
                $(this).css("background", control_btn_color);
                $(this).text("수정");
                let val = $($(tr).find('input')).val();
                $($(tr).find('input')).remove();
                if (val <= 0) val = 0;
                me_data[index][3] = val;
                percentage = (me_data[index][3] / me_data[index][4] * 100).toFixed(1);
                state = `${me_data[index][3]}${me_data[index][2]} / ${me_data[index][4]}${me_data[index][2]}`;
            }
        } else if (type == "설명글") {
            // button name 처리
            if (btn == "수정") {
                $(this).css("background", "#aef1a1");
                $(this).text("저장");
            } else if (btn == "저장") {
                $(this).css("background", control_btn_color);
                $(this).text("수정");
            }

            // percentage 처리
            if (btn == "수정") {
                state = me_data[index][2];
                let input = `<input />`;
                $($(tr).find('.percentage')).html(input + "%");
                $($(tr).find('input')).val(state);
                $($(tr).find('input')).focus();
            } else if (btn == "저장") {
                let val = $($(tr).find('input')).val();
                $($(tr).find('input')).remove();
                if (val <= 0) val = 0;
                if (val >= 100) val = 100;
                me_data[index][2] = val;
                percentage = val;
            }

            // state 처리
            if (btn == "수정") {
                let textarea = `<textarea class='description' onchange="input_size_check(this, 300);"/>`;
                $($(tr).find('.state')).html(textarea);
                $($(tr).find('textarea')).val(me_data[index][3]);
                return;
            } else if (btn == "저장") {
                let val = $($(tr).find('textarea')).val();
                $($(tr).find('textarea')).remove();
                me_data[index][3] = val;
                state = me_data[index][3];
            }
        }
        if (percentage <= 0) percentage = 0;
        if (percentage >= 100) percentage = 100;
        $($(tr).find('.percentage')).text(percentage + '%');
        $($(tr).find('.state')).text(state);

        // 누른 버튼에 따라, user에 me 또는 friend 대입
        let p = $(this).parent();
        let pp = $(p).parent();
        let ppp = $(pp).parent();
        let user;
        let class_me = $(ppp).hasClass("me");
        if (class_me) user = "me";
        else user = "friend";

        // db 저장
        let goal = me_data[index][0];
        let data1 = me_data[index][2];
        let data2 = me_data[index][3];
        let data3 = me_data[index][4];

        $.ajax({
            url: `/content?id=<%=id%>&date=${cur_date}&index=${index}&goal=${goal}&type=${type}&data1=${data1}&data2=${replace_char(data2)}&data3=${data3}`,
            type: 'PUT',
            success: function(result) {},
            error: function(e) {}
        });

        // 평균 계산
        let nan = 0;
        let avg = 0;
        $('.' + user).each(function() {
            let val = $($(this).find('.percentage')).text();
            if (val == '-') {
                nan++;
                return;
            };
            avg += Number.parseFloat(val.substr(0, val.length - 1));
        });
        avg /= $('.' + user).length - nan;
        avg = avg.toFixed(1);

        if (avg <= 0) avg = 0;
        if (avg >= 100) avg = 100;
        $($('#avg_' + user).find(".percentage")).text(avg + '%');
    }

    function make_retrieve_row(user, index) {
        let name;
        let data, data_comment;
        if (user == 'me') {
            name = '<%=name%>';
            data = me_data;
            data_comment = me_data_comment;
        } else if (user == 'friend') {
            name = selected_friend_name;
            data = friend_data;
            data_comment = friend_data_comment;
        }

        let type, goal, percentage, state, control;
        if (index != 'avg') {
            type = data[index][1];
            goal = data[index][0];
            if (type == "-") {
                state = "-";
                control = "-";
            } else if (type == "X/O") {
                state = data[index][2];
                if (data[index][2] == 'X') percentage = 0;
                else if (data[index][2] == 'O') percentage = 100;
                control = `
                <button class='control_btn'>미완료</button>
                <button class='control_btn'>완료</button>
                `;
            } else if (type == "개") {
                state = `${data[index][2]}개 / ${data[index][3]}개`;
                let val = data[index][2] / data[index][3] * 100;
                percentage = val.toFixed(1);
                control = `
                <button class='control_btn'>-5</button>
                <button class='control_btn'>-1</button>
                <button class='control_btn'>+1</button>
                <button class='control_btn'>+5</button>
                `;
            } else if (type == "회") {
                state = `${data[index][2]}회 / ${data[index][3]}회`;
                let val = data[index][2] / data[index][3] * 100;
                percentage = val.toFixed(1);
                control = `
                <button class='control_btn'>-5</button>
                <button class='control_btn'>-1</button>
                <button class='control_btn'>+1</button>
                <button class='control_btn'>+5</button>
                `;
            } else if (type == "세트") {
                state = `${data[index][2]}세트 / ${data[index][3]}세트`;
                let val = data[index][2] / data[index][3] * 100;
                percentage = val.toFixed(1);
                control = `
                <button class='control_btn'>-5</button>
                <button class='control_btn'>-1</button>
                <button class='control_btn'>+1</button>
                <button class='control_btn'>+5</button>
                `;
            } else if (type == "%") {
                state = `${data[index][2]}%`;
                percentage = data[index][2];
                control = `
                <button class='control_btn'>-30</button>
                <button class='control_btn'>-10</button>
                <button class='control_btn'>+10</button>
                <button class='control_btn'>+30</button>
                `;
            } else if (type == "단위입력") {
                state = `${data[index][3]}${data[index][2]} / ${data[index][4]}${data[index][2]}`;
                let val = data[index][3] / data[index][4] * 100;
                percentage = val.toFixed(1);
                control = `
                <button class='control_btn' style="background: ${control_btn_color};">수정</button>
                `;
            } else if (type == "설명글") {
                state = `${data[index][3]}`;
                percentage = data[index][2];
                control = `
                <button class='control_btn' style="background: ${control_btn_color};">수정</button>
                `;
            }
            if (user == 'friend') control = "";
        } else {
            // 평균 계산
            let rows = $('.' + user).length;
            let nan = 0;
            let avg = 0;
            $('.' + user).each(function() {
                let val = $($(this).find('.percentage')).text();
                if (val == '-') {
                    nan++;
                    return;
                };
                avg += Number.parseFloat(val.substr(0, val.length - 1));
            });

            if (nan == rows) avg = 0; // 숫자가 하나도 없을 때
            else {
                avg /= rows - nan;
                avg = avg.toFixed(1);
            }
            percentage = avg;
        }

        if (percentage <= 0) percentage = 0;
        if (percentage >= 100) percentage = 100;
        if (type == "-") percentage = "-";
        else percentage = percentage + '%';

        let table_row;
        if (index == 'avg') {
            let flag = false; // 달성률에 해당하는 항목이 하나도 없다면 평균을 산출하지 않도록 함
            $('.' + user).each(function() {
                let val = $($(this).find('.percentage')).text();
                if (val != '-') {
                    flag = true;
                };
            });
            if (flag == false) percentage = "-"; // 평균 없음

            // 친구의 값은 control 할 수 없음
            let btn = `<button class='control_btn' style="background: ${control_btn_color};">커멘트 수정</button>`;
            if (user == 'friend') btn = "";

            table_row = `
            <tr id='avg_${user}' class="row avg" index="avg">
                <td>
                    <div class='goal'>종합</div>
                </td>
                <td>
                    <div class='percentage'>${percentage}</div>
                </td>
                <td>
                    <div class='state comment_div new_line'>${data_comment}</div>
                </td>
                <td class='control_td'>
                    <div class='control_div'>
                        ${btn}
                    </div>
                </td>
            </tr>
            `;
        } else if (index == 0) {
            table_row = `
            <tr id='row${index}' class="row ${user}" index="${index}">
                <td id='name' rowspan='${data.length + 1}'>${name}</td>
                <td>
                    <div class='goal'>${goal}</div>
                </td>
                <td>
                    <div class='percentage'>${percentage}</div>
                </td>
                <td>
                    <div class='state new_line'>${state}</div>
                </td>
                <td class='control_td'>
                    <div class='control_div'>${control}</div>
                </td>
            </tr>
            `;
        } else {
            table_row = `
            <tr id='row${index}' class="row ${user}" index="${index}">
                <td>
                    <div class='goal'>${goal}</div>
                </td>
                <td>
                    <div class='percentage'>${percentage}</div>
                </td>
                <td>
                    <div class='state new_line'>${state}</div>
                </td>
                <td class='control_td'>
                    <div class='control_div'>${control}</div>
                </td>
            </tr>
        `;
        }
        return table_row;
    }

    function number_to_string(number) {
        if (number < 10) return "0" + number;
        else return number;
    }

    function date_to_string(date) {
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        return year + "-" + number_to_string(month) + "-" + number_to_string(day);
    }

    function string_to_date(string) {
        return new Date(string.substr(0, 4), string.substr(5, 2) - 1, string.substr(8, 2));
    }
</script>

</html>
